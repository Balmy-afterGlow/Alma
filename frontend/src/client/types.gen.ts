// This file is auto-generated by @hey-api/openapi-ts

/**
 * 智能体事件的公开展示模型
 */
export type AgentEventPublic = {
  event_type: string
  timestamp: string
  agent_name: string
  data?: {
    [key: string]: unknown
  } | null
}

export type AgentPublic = {
  name: string
  instruction: string
  team?: Array<string> | null
  is_system_agent?: boolean
  status?: string
  agent_id: string
  model_id: string | null
  user_id: string | null
}

export type AgentsPublic = {
  data: Array<AgentPublic>
  count: number
}

export type Body_login_login_access_token = {
  grant_type?: string | null
  username: string
  password: string
  scope?: string
  client_id?: string | null
  client_secret?: string | null
}

/**
 * 包含事件信息的聊天消息模型
 */
export type ChatMessageWithEvents = {
  message_id: string
  role: string
  content: string
  timestamp: string
  agent_id: string
  agent_name?: string | null
  model_metadata?: {
    [key: string]: unknown
  } | null
  events?: Array<AgentEventPublic> | null
  model_used?: string | null
  tools_available?: number
}

/**
 * 聊天请求模型
 */
export type ChatRequest = {
  message: string
  agent_id: string
  conversation_id?: string | null
  model_id?: string | null
}

/**
 * 聊天响应模型
 */
export type ChatResponse = {
  conversation_id: string
  user_message_id: string
  assistant_message_id: string
  response: string
  events?: Array<{
    [key: string]: unknown
  }> | null
  events_summary?: {
    [key: string]: unknown
  } | null
  session_id?: string | null
  autoagent_info?: {
    [key: string]: unknown
  } | null
}

export type ConversationCreate = {
  title?: string
}

export type ConversationPublic = {
  title?: string
  conversation_id: string
  created_at: string
  user_id: string
}

export type ConversationsPublic = {
  data: Array<ConversationPublic>
  count: number
}

export type ConversationUpdate = {
  title?: string | null
}

/**
 * 包含带事件信息的消息的对话模型
 */
export type ConversationWithEventsMessages = {
  conversation_id: string
  title: string
  created_at: string
  messages: Array<ChatMessageWithEvents>
  messages_count: number
}

export type HTTPValidationError = {
  detail?: Array<ValidationError>
}

export type LLMConfigCreate = {
  provider: string
  api_key: string
}

export type LLMConfigPublic = {
  provider: string
  llm_id: string
  user_id: string
}

export type LLMConfigsPublic = {
  data: Array<LLMConfigPublic>
  count: number
}

export type LLMConfigUpdate = {
  provider?: string | null
  api_key?: string | null
}

export type Message = {
  message: string
}

export type MessageCreate = {
  role: string
  content: string
  model_metadata?: {
    [key: string]: unknown
  } | null
  conversation_id: string
  agent_id: string
}

export type MessagePublic = {
  role: string
  content: string
  model_metadata?: {
    [key: string]: unknown
  } | null
  message_id: string
  timestamp: string
  is_deleted: boolean
  conversation_id: string
  agent_id: string
}

export type MessagesPublic = {
  data: Array<MessagePublic>
  count: number
}

export type MessageUpdate = {
  content?: string | null
  model_metadata?: {
    [key: string]: unknown
  } | null
  is_deleted?: boolean | null
}

export type ModelCreate = {
  name: string
  base_url?: string | null
  llm_id: string
}

export type ModelPublic = {
  name: string
  base_url?: string | null
  model_id: string
  llm_id: string
}

export type ModelsPublic = {
  data: Array<ModelPublic>
  count: number
}

export type ModelUpdate = {
  name?: string | null
  base_url?: string | null
}

export type NewPassword = {
  token: string
  new_password: string
}

export type Token = {
  access_token: string
  token_type?: string
}

export type ToolPublic = {
  name: string
  parameters: {
    [key: string]: unknown
  }
  description?: string | null
  implementation?: string | null
  tool_id: string
}

export type ToolsPublic = {
  data: Array<ToolPublic>
  count: number
}

export type UpdatePassword = {
  current_password: string
  new_password: string
}

export type UserCreate = {
  email: string
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  password: string
}

/**
 * 用户仪表板数据模型
 */
export type UserDashboard = {
  llm_configs_count: number
  conversations_count: number
  recent_conversations: Array<{
    [key: string]: unknown
  }>
  available_agents: Array<{
    [key: string]: unknown
  }>
}

export type UserPublic = {
  email: string
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  id: string
}

export type UserRegister = {
  email: string
  password: string
  full_name?: string | null
}

export type UsersPublic = {
  data: Array<UserPublic>
  count: number
}

export type UserUpdate = {
  email?: string | null
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  password?: string | null
}

export type UserUpdateMe = {
  full_name?: string | null
  email?: string | null
}

export type ValidationError = {
  loc: Array<string | number>
  msg: string
  type: string
}

export type AgentsGetAvailableSystemAgentsData = {
  args: unknown
  kwargs: unknown
  limit?: number
  skip?: number
}

export type AgentsGetAvailableSystemAgentsResponse = AgentsPublic

export type AgentsGetAgentDetailsData = {
  agentId: string
  args: unknown
  kwargs: unknown
}

export type AgentsGetAgentDetailsResponse = AgentPublic

export type AgentsGetAgentToolsData = {
  agentId: string
  args: unknown
  kwargs: unknown
}

export type AgentsGetAgentToolsResponse = ToolsPublic

export type ChatChatWithAgentData = {
  args: unknown
  kwargs: unknown
  requestBody: ChatRequest
}

export type ChatChatWithAgentResponse = ChatResponse

export type ConversationsGetUserConversationsData = {
  args: unknown
  kwargs: unknown
  limit?: number
  skip?: number
}

export type ConversationsGetUserConversationsResponse = ConversationsPublic

export type ConversationsCreateNewConversationData = {
  args: unknown
  kwargs: unknown
  requestBody: ConversationCreate
}

export type ConversationsCreateNewConversationResponse = ConversationPublic

export type ConversationsGetRecentConversationsData = {
  args: unknown
  kwargs: unknown
  limit?: number
}

export type ConversationsGetRecentConversationsResponse = ConversationsPublic

export type ConversationsGetConversationData = {
  args: unknown
  conversationId: string
  kwargs: unknown
}

export type ConversationsGetConversationResponse = ConversationPublic

export type ConversationsUpdateConversationTitleData = {
  args: unknown
  conversationId: string
  kwargs: unknown
  requestBody: ConversationUpdate
}

export type ConversationsUpdateConversationTitleResponse = ConversationPublic

export type ConversationsDeleteUserConversationData = {
  args: unknown
  conversationId: string
  kwargs: unknown
}

export type ConversationsDeleteUserConversationResponse = {
  [key: string]: string
}

export type ConversationsGetConversationDetailedData = {
  args: unknown
  conversationId: string
  kwargs: unknown
}

export type ConversationsGetConversationDetailedResponse =
  ConversationWithEventsMessages

export type DashboardGetUserDashboardData = {
  args: unknown
  kwargs: unknown
}

export type DashboardGetUserDashboardResponse = UserDashboard

export type LlmConfigsGetUserLlmConfigsData = {
  args: unknown
  kwargs: unknown
  limit?: number
  skip?: number
}

export type LlmConfigsGetUserLlmConfigsResponse = LLMConfigsPublic

export type LlmConfigsCreateUserLlmConfigData = {
  args: unknown
  kwargs: unknown
  requestBody: LLMConfigCreate
}

export type LlmConfigsCreateUserLlmConfigResponse = LLMConfigPublic

export type LlmConfigsGetLlmConfigData = {
  args: unknown
  kwargs: unknown
  llmId: string
}

export type LlmConfigsGetLlmConfigResponse = LLMConfigPublic

export type LlmConfigsUpdateUserLlmConfigData = {
  args: unknown
  kwargs: unknown
  llmId: string
  requestBody: LLMConfigUpdate
}

export type LlmConfigsUpdateUserLlmConfigResponse = LLMConfigPublic

export type LlmConfigsDeleteUserLlmConfigData = {
  args: unknown
  kwargs: unknown
  llmId: string
}

export type LlmConfigsDeleteUserLlmConfigResponse = {
  [key: string]: string
}

export type LlmConfigsGetLlmModelsData = {
  args: unknown
  kwargs: unknown
  limit?: number
  llmId: string
  skip?: number
}

export type LlmConfigsGetLlmModelsResponse = ModelsPublic

export type LlmConfigsCreateLlmModelData = {
  args: unknown
  kwargs: unknown
  llmId: string
  requestBody: ModelCreate
}

export type LlmConfigsCreateLlmModelResponse = ModelPublic

export type LlmConfigsUpdateLlmModelData = {
  args: unknown
  kwargs: unknown
  llmId: string
  modelId: string
  requestBody: ModelUpdate
}

export type LlmConfigsUpdateLlmModelResponse = ModelPublic

export type LlmConfigsDeleteLlmModelData = {
  args: unknown
  kwargs: unknown
  llmId: string
  modelId: string
}

export type LlmConfigsDeleteLlmModelResponse = {
  [key: string]: string
}

export type LoginLoginAccessTokenData = {
  formData: Body_login_login_access_token
}

export type LoginLoginAccessTokenResponse = Token

export type LoginTestTokenResponse = UserPublic

export type LoginRecoverPasswordData = {
  email: string
}

export type LoginRecoverPasswordResponse = Message

export type LoginResetPasswordData = {
  requestBody: NewPassword
}

export type LoginResetPasswordResponse = Message

export type LoginRecoverPasswordHtmlContentData = {
  email: string
}

export type LoginRecoverPasswordHtmlContentResponse = string

export type MessagesGetConversationMessagesData = {
  args: unknown
  conversationId: string
  kwargs: unknown
  limit?: number
  skip?: number
}

export type MessagesGetConversationMessagesResponse = MessagesPublic

export type MessagesCreateNewMessageData = {
  args: unknown
  kwargs: unknown
  requestBody: MessageCreate
}

export type MessagesCreateNewMessageResponse = MessagePublic

export type MessagesGetMessageData = {
  args: unknown
  kwargs: unknown
  messageId: string
}

export type MessagesGetMessageResponse = MessagePublic

export type MessagesUpdateUserMessageData = {
  args: unknown
  kwargs: unknown
  messageId: string
  requestBody: MessageUpdate
}

export type MessagesUpdateUserMessageResponse = MessagePublic

export type MessagesDeleteUserMessageData = {
  args: unknown
  kwargs: unknown
  messageId: string
}

export type MessagesDeleteUserMessageResponse = {
  [key: string]: string
}

export type UsersReadUsersData = {
  limit?: number
  skip?: number
}

export type UsersReadUsersResponse = UsersPublic

export type UsersCreateUserData = {
  requestBody: UserCreate
}

export type UsersCreateUserResponse = UserPublic

export type UsersReadUserMeResponse = UserPublic

export type UsersDeleteUserMeResponse = Message

export type UsersUpdateUserMeData = {
  requestBody: UserUpdateMe
}

export type UsersUpdateUserMeResponse = UserPublic

export type UsersUpdatePasswordMeData = {
  requestBody: UpdatePassword
}

export type UsersUpdatePasswordMeResponse = Message

export type UsersRegisterUserData = {
  requestBody: UserRegister
}

export type UsersRegisterUserResponse = UserPublic

export type UsersReadUserByIdData = {
  userId: string
}

export type UsersReadUserByIdResponse = UserPublic

export type UsersUpdateUserData = {
  requestBody: UserUpdate
  userId: string
}

export type UsersUpdateUserResponse = UserPublic

export type UsersDeleteUserData = {
  userId: string
}

export type UsersDeleteUserResponse = Message

export type UtilsHealthCheckResponse = boolean
